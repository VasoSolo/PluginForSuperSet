(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};






















import { createSelector } from 'reselect';
import {


convertKeysToCamelCase } from



'../..';

































































const DEFAULT_WIDTH = 800;
const DEFAULT_HEIGHT = 600;

export default class ChartProps {


































  constructor(config = {}) {this.annotationData = void 0;this.datasource = void 0;this.rawDatasource = void 0;this.initialValues = void 0;this.formData = void 0;this.rawFormData = void 0;this.height = void 0;this.hooks = void 0;this.ownState = void 0;this.filterState = void 0;this.queriesData = void 0;this.width = void 0;this.behaviors = void 0;this.appSection = void 0;this.isRefreshing = void 0;this.inputRef = void 0;
    const {
      annotationData = {},
      datasource = {},
      formData = {},
      hooks = {},
      ownState = {},
      filterState = {},
      initialValues = {},
      queriesData = [],
      behaviors = [],
      width = DEFAULT_WIDTH,
      height = DEFAULT_HEIGHT,
      appSection,
      isRefreshing,
      inputRef } =
    config;
    this.width = width;
    this.height = height;
    this.annotationData = annotationData;
    this.datasource = convertKeysToCamelCase(datasource);
    this.rawDatasource = datasource;
    this.formData = convertKeysToCamelCase(formData);
    this.rawFormData = formData;
    this.hooks = hooks;
    this.initialValues = initialValues;
    this.queriesData = queriesData;
    this.ownState = ownState;
    this.filterState = filterState;
    this.behaviors = behaviors;
    this.appSection = appSection;
    this.isRefreshing = isRefreshing;
    this.inputRef = inputRef;
  } // @ts-ignore
  __reactstandin__regenerateByEval(key, code) {// @ts-ignore
    this[key] = eval(code);}}
// eslint-disable-next-line func-name-matching
ChartProps.createSelector = void 0;ChartProps.createSelector = function create() {
  return createSelector(
  (input) => input.annotationData,
  (input) => input.datasource,
  (input) => input.formData,
  (input) => input.height,
  (input) => input.hooks,
  (input) => input.initialValues,
  (input) => input.queriesData,
  (input) => input.width,
  (input) => input.ownState,
  (input) => input.filterState,
  (input) => input.behaviors,
  (input) => input.appSection,
  (input) => input.isRefreshing,
  (input) => input.inputRef,
  (
  annotationData,
  datasource,
  formData,
  height,
  hooks,
  initialValues,
  queriesData,
  width,
  ownState,
  filterState,
  behaviors,
  appSection,
  isRefreshing,
  inputRef) =>

  new ChartProps({
    annotationData,
    datasource,
    formData,
    height,
    hooks,
    initialValues,
    queriesData,
    ownState,
    filterState,
    width,
    behaviors,
    appSection,
    isRefreshing,
    inputRef }));


};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_WIDTH, "DEFAULT_WIDTH", "/Users/ville/src/superset-release/superset-frontend/packages/superset-ui-core/src/chart/models/ChartProps.ts");reactHotLoader.register(DEFAULT_HEIGHT, "DEFAULT_HEIGHT", "/Users/ville/src/superset-release/superset-frontend/packages/superset-ui-core/src/chart/models/ChartProps.ts");reactHotLoader.register(ChartProps, "ChartProps", "/Users/ville/src/superset-release/superset-frontend/packages/superset-ui-core/src/chart/models/ChartProps.ts");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();