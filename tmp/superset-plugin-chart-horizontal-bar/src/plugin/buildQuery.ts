import { buildQueryContext, QueryFormData } from '@superset-ui/core';
/**
* Функция buildQuery используется для создания экземпляра QueryContext, который
* отправляется в конечную точку данных диаграммы. В дополнение к содержащей информацию, о которой
* используемый источник данных указывает тип (например, полная полезная нагрузка, образцы, запрос) и
* формат (например, CSV или JSON) результата, а также следует ли принудительно обновлять данные из
* источник данных в отличие от использования кэшированной копии данных, если таковая имеется.
*
* Что еще более важно, QueryContext содержит свойство `queries`, которое представляет собой массив
* Объекты запроса, определяющие индивидуальные запросы данных, которые должны быть сделаны. Объект запроса указывает, какой
* столбцы, метрики и фильтры, среди прочего, для использования во время запроса. Обычно этого будет достаточно
* чтобы указать только один запрос на основе baseQueryObject, но для некоторых более сложных вариантов использования
* можно определить операции постобработки в QueryObject или несколько запросов
* если для viz требуется несколько разных наборов результатов.
 */
export default function buildQuery(formData: QueryFormData) {
  const { cols: groupby } = formData;
  return buildQueryContext(formData, baseQueryObject => [
    {
      ...baseQueryObject,
      groupby,
    },
  ]);
}
